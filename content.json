[{"title":"vue 2的使用心得","date":"2017-05-25T10:13:01.000Z","path":"2017/05/25/vue-2的使用心得/","text":"elementUI 网站快速成型工具 elementUI官网 vue官网 vue-router官网 页面之间的路由配置及传参12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152// home.vue中写入&lt;template&gt; &lt;div&gt; &lt;router-link to=\"/nav\"&gt;跳转页面&lt;/router-link&gt; &lt;el-button type=\"primary\" @click=\"goHeader\"&gt;主要按钮&lt;/el-button&gt; &lt;router-link :to=\"&#123; name: 'header', params: &#123; userId: 123 &#125;&#125;\"&gt;header页面传参&lt;/router-link&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; export default&#123; name: 'home', data()&#123; return &#123;&#125; &#125;, methods: &#123; goHeader: function () &#123; // 字符串 this.$router.push('header/123') // 对象 this.$router.push(&#123;path: 'header/0'&#125;) // 命名的路由 this.$router.push(&#123;name: 'header', params: &#123;userId: 1&#125;&#125;) &#125; &#125; &#125;&lt;/script&gt;&lt;style&gt;&lt;/style&gt;// 在router.js文件中写入// 引用模板import header from '../components/header.vue'import home from '../components/home.vue'import nav from '../components/frame/nav.vue'// 配置路由export default [ &#123; path: '/', component: home &#125;, &#123; path: '/nav', component: nav &#125;, &#123; path: '/header/:userId', name: 'header', component: header &#125;] vue如何使用组件123456789101112131415161718192021222324252627282930313233&lt;template&gt; &lt;div&gt; &lt;steps&gt;&lt;/steps&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;// 第一种方法 import Steps from './steps.vue' //此处引入 export default&#123; components: &#123;Steps&#125;, // 此处注册组件，调用的时候，要用大写 name: 'home', data()&#123; return &#123; dialogFormVisible: false, &#125; &#125;, &#125;// 第二种方法 var Steps = require('./steps.vue'); // 返回的是一个组件，必须注册才能使用 export default&#123; components: &#123;'steps': Steps&#125;, //components: &#123;'steps': require('./steps.vue')&#125;, // 换了一种表达式 name: 'home', data()&#123; return &#123; dialogFormVisible: false, &#125; &#125;, &#125;&lt;/script&gt;&lt;style scope&gt;&lt;/style&gt; vue2.0之axios使用123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475发送一个get请求：axios.get('/user', &#123;params: &#123;ID: 12345&#125;&#125;).then(function (response) &#123;console.log(response);&#125;).catch(function (error) &#123;console.log(error);&#125;);第一种方法： var params = &#123; loginCode: this.loginCode, passWord: this.passWord, url: 'yatouLogin' &#125; // 发送post请求把对象转成字符串 var postparams = new URLSearchParams(); postparams.append('loginCode', this.loginCode); postparams.append('passWord', this.passWord); this.$http.post('yatouLogin', postparams).then(function (res) &#123; console.log(res); if (res.data.success) &#123; that.$router.push(&#123;path: 'nav'&#125;) localStorage.clear('powerList'); localStorage.setItem('powerList', JSON.stringify(res.data.data)) &#125; else &#123; that.$message.error(res.data.errMsg); &#125; &#125;).catch(function (response) &#123; console.log(response);&#125;);第二种方法：在main.js中配置axiso的属性import axios from 'axios'import qs from 'qs'Vue.use(qs);axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'; //配置请求头axios.defaults.baseURL = 'http://wx.bokedata.com/yatou/';//设置携带session，解决跨域axios.defaults.withCredentials = true;Vue.prototype.$http = axios;const router = new VueRouter(&#123; routes&#125;)// 拦截器处理post的参数axios.interceptors.request.use((config) =&gt; &#123; if(config.method === 'post')&#123; config.data = qs.stringify(config.data); &#125; return config;&#125;,(error) =&gt;&#123; _.toast(\"错误的传参\", 'fail'); return Promise.reject(error);&#125;)// 调用接口var params = &#123; loginCode: this.loginCode, passWord: this.passWord, url: 'yatouLogin'&#125;this.$http.post(params.url, &#123; 'loginCode': params.loginCode, 'passWord': params.passWord&#125;).then(function (res) &#123; console.log(res); if (res.data.success) &#123; that.$router.push(&#123;path: 'nav'&#125;) localStorage.clear('powerList'); localStorage.setItem('powerList', JSON.stringify(res.data.data)) &#125; else &#123; that.$message.error(res.data.errMsg); &#125;&#125;)","tags":[]},{"title":"github生成密钥","date":"2017-05-24T05:29:27.000Z","path":"2017/05/24/github生成密钥/","text":"123$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"$ vi .ssh/id_rsa.pub 查看自己的公钥","tags":[]},{"title":"mysql的使用","date":"2017-05-22T09:38:45.000Z","path":"2017/05/22/mysql的使用/","text":"mysql的使用 设置alias的路径1.vim ~/. 打开隐藏文件2.找到.zshrc文件2.alias mysql=/usr/local/mysql/bin/mysql； Macbook Pro 安装及卸载mysql教程http://www.th7.cn/db/mysql/201504/101743.shtml mysql的教程http://blog.csdn.net/yanqinbin/article/details/504426761.http://dev.mysql.com/downloads/mysql/ http://dev.mysql.com/downloads/workbench/ cd /usr/local/mysql/bin/3.回车后 登录管理员权限 sudo su4.回车后输入以下命令来禁止mysql验证功 ./mysqld_safe –skip-grant-tables &amp;5.输入 alias 命令 alias mysql=/usr/local/mysql/bin/mysql#如果是登录远程主机上的mysql数据库 mysql -h 主机地址 -u 用户名 -p 用户密码sudo apt-get install mysql-workbench 安装mysqlcreate database Company default char set utf8 collate utf8_general_ci;; 第一步： 创建中文输入use mysqlTest // 使用库名create table students // 创建表的名字(Id_P int NOT NULL auto_increment,LastName varchar(255) NOT NULL,FirstName varchar(255),Address varchar(255),City varchar(255),PRIMARY KEY (Id_P))charset = utf8 drop database MYdb; 删除数据select name , gender from stduent[where gender = “男” and sorce &lt;= 70][limit 0 offset 4 ] limit 选择下标 offset 选择几项update student set phone=’13411112222’,english_score=90 where name=’韩梅梅’; //更新数据delete from student where id=3; //删除第3行select from student where phone like ‘1%’; 取电话开头市1的所有电话distinct 把重复的合并成打第一个;select avg(age) from school.student; 求平均数select count(distinct name) from school.student; （去掉重名的行数max（） min（）sum（） 最大 最小函数 求和select mid(name,1,2) from school.student; 从姓名中第一位开始取两个。select length(name),name from school.student; 姓名的长度 注：1个文字占三个字节select now(); 当前的时间order by age desc/asc; 排序 降序 升序;where and/or 不能是聚合函数 having and/or 可以是聚合函数;（select age from student） 子查询语法黑窗户命令mysql -u root -pshow databases;create database Company default char set utf8 collate utf8_general_ci;; 第一步： 创建中文输入use Company;查询1-5条数据select from news where 1=1 limit 0,5; unbuntu下载 w 查看登陆信息 apt-cache search mysql-server3.sudo apt-get install mysql-server-5.64.ps -ef|grep mysqld //查看mysql的进程5.sudo /etc/init.d/mysql start/stop/restart status //查看mysql的状态6.mysql -h127.0.0.1 -p3306 -uroot -p || mysql -S/tmp/mysql.sock -uroot -p // 连接到服务器(服务器和本机) status; // 查看mysql的连接状态 show processlist; // 查看进程列表 show global variables like ‘socket’; // 查看socket文件所在的位置 (mysql -S/tmp/mysql.sock -uroot -p)10.配置MySQL接受远程登录连接:grant all PRIVILEGES on mydb.* to linjk@’%’ identified by ‘123456’11.配置完后使用命令：flush privileges;使配置生效。","tags":[]},{"title":"IntelliJ Idea 免费激活方法","date":"2017-05-15T15:23:57.000Z","path":"2017/05/15/IntelliJ-Idea/","text":"到网站 http://idea.lanyus.com/ 获取注册码。 2.填入下面的license server: http://intellij.mandroid.cn/ http://idea.imsxm.com/ http://idea.iteblog.com/key.php 以上方法验证均可以","tags":[]},{"title":"vim 命令详解","date":"2017-05-12T09:30:32.000Z","path":"2017/05/12/vim-命令详解/","text":"一不小心就成大神用黑窗口开启编辑模式 一、模式切换编辑–&gt;输入：i: 在当前光标所在字符的前面，转为输入模式； a: 在当前光标所在字符的后面，转为输入模式； o: 在当前光标所在行的下方，新建一行，并转为输入模式； I：在当前光标所在行的行首，转换为输入模式 A：在当前光标所在行的行尾，转换为输入模式 O：在当前光标所在行的上方，新建一行，并转为输入模式； dd：删除当前光标所在行； 输入–&gt;编辑： ESC 编辑–&gt;末行： : 末行–&gt;编辑： ESC, ESC ####二、关闭文件 #####1、末行模式关闭文件 :q 退出 :wq 保存并退出 :q! 不保存并退出 :w 保存 :w! 强行保存 :wq --&gt; :x #####2、编辑模式下退出 ZZ: 三、移动光标(编辑模式)1、逐字符移动：h: 左 l: 右 j: 下 k: 上 #h: 移动#个字符 2、行间跳转#G：跳转至第#行 gg: 第一行 G：最后一行 3、翻屏Ctrl+f: 向下翻一屏 Ctrl+b: 向上翻一屏 Ctrl+d: 向下翻半屏 Ctrl+u: 向上翻半屏 四、撤消编辑操作 u u：撤消前一次的编辑操作","tags":[]},{"title":"动态添加表格添加数据","date":"2017-04-26T14:08:41.000Z","path":"2017/04/26/动态添加表格添加数据/","text":"动态生成表格 1&lt;table id=\"table\" class=\"table table-bordered\"&gt;&lt;/table&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798var array = [ &#123; \"id\": \"operation_manage\", \"name\": \"运营管理\", \"features\": [ &#123; \"value\": \"operation_01\", \"name\": \"商品管理\", \"isChecked\": true &#125;, &#123; \"value\": \"operation_02\", \"name\": \"售货机管理\", \"isChecked\": true &#125;, &#123; \"value\": \"operation_03\", \"name\": \"点位管理\", \"isChecked\": true &#125; ] &#125;, &#123; \"id\": \"setting_manage\", \"name\": \"配置中心\", \"features\": [ &#123; \"value\": \"setting_01\", \"name\": \"角色管理\", \"isChecked\": false &#125;, &#123; \"value\": \"setting_02\", \"name\": \"组织设置\", \"isChecked\": false &#125;, &#123; \"value\": \"setting_03\", \"name\": \"用户管理\", \"isChecked\": true &#125; ] &#125;,];function add() &#123; var myTd; for (var i = 0; i &lt; array.length; i++) &#123; var $name = $('&lt;tr&gt;&lt;td&gt;&lt;input type=\"checkbox\" value=\"' + array[i].id + '\"&gt;' + array[i].name + '&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;') $('table').append($name) var featuresArr = array[i].features; for (var j = 0; j &lt; featuresArr.length; j++) &#123; var features = featuresArr[j].name; var featuresValue = featuresArr[j].value; var featuresIsChecked = featuresArr[j].isChecked; if (featuresIsChecked) &#123; myTd = $('&lt;span&gt;&lt;input checked=\"checked\" type=\"checkbox\" value=\"' + featuresValue + '\"&gt;' + features + '&lt;/span&gt;') $('#table tr td:even input').prop('checked',true) &#125; else &#123; myTd = $('&lt;span&gt;&lt;input type=\"checkbox\" value=\"' + featuresValue + '\"&gt;' + features + '&lt;/span&gt;') &#125; $($('table tr')[i]).find('td').eq(1).append(myTd); &#125; &#125;&#125;add()// 全选$('#table tr td:even').click(function () &#123; var firstVal = $(this).find('input').prop('checked'); $(this).siblings().find('input').prop('checked', firstVal);&#125;)// 关联$('#table tr td:odd').click(function () &#123; var num = 0 $(this).find('input').each(function (i, e) &#123; if (e.checked) &#123; num++ &#125; &#125;) if (num &gt; 0) &#123; $(this).siblings().find('input').prop('checked', true) &#125; else &#123; $(this).siblings().find('input').prop('checked', false) &#125;&#125;)// 全选和全不选$('#selectAll').click(function () &#123; $('input[type=\"checkbox\"]').not('#selectAll').prop('checked', $('#selectAll').prop('checked'))&#125;)$('#submit').on('click', function () &#123; var arr = []; $('input:checked').each(function (i, e) &#123; arr.push($(e).val()) &#125;) console.log(arr);&#125;)","tags":[]},{"title":"人防大数据平台","date":"2017-04-24T10:06:28.000Z","path":"2017/04/24/人防大数据平台/","text":"1.拦截器1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283angular.module('datatower.services', []) // 给headers设置自定义的值 $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8'; .factory('HttpInterceptor', function ($q) &#123; var interceptor = &#123; 'request': function(config) &#123; if(config.method=='POST')&#123; var encodedData = '_=1'; for(var param in config.data)&#123; var value = config.data[param]; if(value!=undefined)&#123; encodedData += \"&amp;\"+param + \"=\" +value; &#125; &#125; config.data = encodedData; config.headers = config.headers||&#123;&#125;; config.headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8'; &#125; return config; &#125;, 'response': function (response) &#123; // console.log(response); if (response.data.respCode == '000001') &#123; var d = dialog(&#123; content: '无效用户' &#125;); d.show(); setTimeout(function () &#123; d.close().remove(); &#125;, 2000); &#125; else if (response.data.respCode == '000002') &#123; var d = dialog(&#123; content: '没有数据访问权限' &#125;); d.show(); setTimeout(function () &#123; d.close().remove(); &#125;, 2000); &#125; else if (response.data.respCode == '000003') &#123; var d = dialog(&#123; content: '数字签名不合法' &#125;); d.show(); setTimeout(function () &#123; d.close().remove(); &#125;, 2000); &#125; else if (response.data.respCode == '000005') &#123; var d = dialog(&#123; content: '无效的参数' &#125;); d.show(); setTimeout(function () &#123; d.close().remove(); &#125;, 2000); &#125; else if (response.data.respCode == '000006') &#123; var d = dialog(&#123; content: '接口异常' &#125;); d.show(); setTimeout(function () &#123; d.close().remove(); &#125;, 2000); &#125;; return response &#125;, 'responseError': function (err) &#123; // console.log(err); if (-1 === err.status) &#123; var d = dialog(&#123; content: '请检查连接网络' &#125;); d.show(); setTimeout(function () &#123; d.close().remove(); &#125;, 2000); &#125; return $q.reject(err); &#125; &#125;; return interceptor; &#125;) 2.匹配对应的菜单值1234567891011121314$(\".navbar-nav a\").each(function (idx,a) &#123; var linkFuncCode = $(this).attr(\"func-code\"); if(linkFuncCode)&#123; var isAuthed = false; $(window.auth.funcs).each(function (index,funcCode) &#123; if(linkFuncCode==funcCode)&#123; isAuthed = true; return false; &#125; &#125;); if(!isAuthed)&#123; $(a).parent(\"li\").css(\"display\",\"none\"); &#125; &#125;","tags":[]},{"title":"js一些技巧","date":"2017-04-24T08:23:29.000Z","path":"2017/04/24/js一些技巧/","text":"统计数组123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475// 统计数组var dataArr = [];for (var i = 0; i &lt; comSysArr.length;) &#123; var isHave = false; for (var j = 0; j &lt; dataArr.length;j++) &#123; if (comSysArr[i].comSysTypeName == dataArr[j][0]) &#123; isHave = true; if (comSysArr[i].buildYear == yearCurrunt) &#123; //当前的一年 dataArr[j][3] += comSysArr[i].comSysCount - 0; &#125; else if (comSysArr[i].buildYear == yearCurrunt - 1) &#123; dataArr[j][2] += comSysArr[i].comSysCount - 0; &#125; else if (comSysArr[i].buildYear == yearCurrunt - 2) &#123; dataArr[j][1] += comSysArr[i].comSysCount - 0; &#125; i++; &#125; &#125; if (!isHave) &#123; dataArr.push([comSysArr[i].comSysTypeName, 0, 0, 0]) &#125;&#125;var lengendText = [];dataArr.forEach(function (item, index) &#123; lengendText.push(item[0]) item.shift()&#125;)arr0 = dataArr[0] == undefined ? [0, 0, 0] : dataArr[0];arr1 = dataArr[1] == undefined ? [0, 0, 0] : dataArr[1];arr2 = dataArr[2] == undefined ? [0, 0, 0] : dataArr[2];arr3 = dataArr[3] == undefined ? [0, 0, 0] : dataArr[3];arr4 = dataArr[4] == undefined ? [0, 0, 0] : dataArr[4];// javascript 技巧 var arr = [[123, 12], 1, [1, 123]]; var arr1 = []; // 递归 function fn(array) &#123; for (var i = 0; i &lt; array.length; i++) &#123; if (typeof array[i] != &apos;number&apos;) &#123; fn(array[i]); &#125; else &#123; arr1.push(array[i]) &#125; &#125; &#125; fn(arr); // 冒泡排序 for (var j = 0; j &lt; arr1.length; j++) &#123; for (var i = 0; i &lt; arr1.length - 1 - j; i++) &#123; if (arr1[i] &gt; arr1[i + 1]) &#123; var temp = arr1[i]; arr1[i] = arr1[i + 1]; arr1[i + 1] = temp &#125; &#125; &#125; // 统计出现的次数 var arrCount = []; for (var i = 0; i &lt; arr1.length; i++) &#123; var isHave = false; for (var j = 0; j &lt; arrCount.length; j++) &#123; if (arrCount[j].name == arr1[i]) &#123; isHave = true; arrCount[j].count++; &#125; &#125; if (!isHave) &#123; var item = &#123; name: arr1[i], count: 1 &#125;; arrCount.push(item) &#125; &#125;","tags":[]},{"title":"浏览器的方法","date":"2017-04-23T06:02:14.000Z","path":"2017/04/23/浏览器的一些方法/","text":"获取屏幕的尺寸12345678910111213141516// 获取浏览器窗口的尺寸 window.onresize = function () &#123; getViewportSize(); console.log('宽度='+getViewportSize().width); console.log('高度='+getViewportSize().height); &#125; function getViewportSize(w) &#123; w = w|| window; // IE9及标准的浏览器可使用其方法 if('innerHeight' in w)&#123; return &#123; width:w.innerWidth, height:w.innerHeight &#125;; &#125; &#125; cookie操作工具123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112 // cookie 存取 var cookieUtil = (function (window, undefined) &#123; var doc = window.document; var cookieUtil = &#123; /** * 根据opt中设置的值设置cookie * * @param &#123;Object&#125; opt 包含cookie信息的对象，选项如下 * key &#123;string&#125; 需要设置的名字 * value &#123;string&#125; 需要设置的值 * maxAge &#123;number&#125; 有效期 * domain &#123;string&#125; domain * path &#123;string&#125; path * secure &#123;boolean&#125; secure * * @return &#123;string&#125; opt对应的设置cookie的字符串 */ setItem: function (opt) &#123; var result = []; var str; if (opt.key) &#123; result.push(encodeURIComponent(opt.key) + '=' + encodeURIComponent(opt.value)); if ('maxAge' in opt) &#123; result.push('max-age=' + opt.maxAge); &#125; if ('domain' in opt) &#123; result.push('domain=' + opt.domain); &#125; if ('path' in opt) &#123; result.push('path=' + opt.path); &#125; if (opt.secure) &#123; result.push('secure'); &#125; str = result.join('; '); doc.cookie = str; &#125; return str; &#125;, /** * 从cookie读取指定key的值，如果key有多个值，返回数组，如果没有 * 对应key，返回undefined * * @param &#123;string&#125; key 需要从cookie获取值得key * @return &#123;string|Array|undefined&#125; 根据cookie数据返回不同值 */ getItem: function (key) &#123; key = encodeURIComponent(key); var result; var pairs = doc.cookie.split('; '); var i, len, item, value; for (i = 0, len = pairs.length; i &lt; len; ++i) &#123; item = pairs[i]; if (item.indexOf(key) === 0) &#123; value = decodeURIComponent(item.slice(item.indexOf('=') + 1)); if (typeof result === 'undefined') &#123; result = value; &#125; else if (typeof result === 'string') &#123; result = [result]; result.push(value); &#125; else &#123; result.push(value); &#125; &#125; // end if &#125; // end for return result; &#125;, /** * 解析cookie返回对象，键值对为cookie存储信息 * * @return &#123;Object&#125; 包含cookie信息的对象 */ getAll: function () &#123; var obj = &#123;&#125;; var i, len, item, key, value, pairs, pos; pairs = doc.cookie.split('; '); for (i = 0, len = pairs.length; i &lt; len; ++i) &#123; item = pairs[i].split('='); key = decodeURIComponent(item[0]); value = decodeURIComponent(item[1] ? item[1] : ''); obj[key] = value; &#125; return obj; &#125;, /** * 清除当前文档能访问的所有cookie * */ clear: function () &#123; var pairs = doc.cookie.split('; '); var i, len, item, key; for (i = 0, len = pairs.length; i &lt; len; ++i) &#123; item = pairs[i]; key = item.slice(0, item.indexOf('=')); doc.cookie = key + '=; max-age=0'; &#125; &#125; &#125;; return cookieUtil;&#125;(window));","tags":[]},{"title":"前端规范","date":"2017-04-19T05:55:53.000Z","path":"2017/04/19/前端规范/","text":"Front End Standards前端规范 1. 书写规范1.1 项目结构---/html/ |---- /index |---- /index/index.html 首页 |---- /user/ 与用户相关的页面 |---- /user/login.html 登录页 ---/css/ |---- /base.css 重置浏览器样式 |---- /page 逻辑页面的css |---- /page/pagename.css 单独书写的css |---- /common.css css通用样式库 ---/js/ |---- /lib 公用组件 |---- /lib/jquery.2.2.3.min.js 调用jq库文件 |---- /page 逻辑页面的js |---- /page/pagename.js 单独书写的js |---- /common.js 公用方法 ---/img/ |---- /page 页面对应的图片 |---- /page/wap 手机端图片夹 |---- /page/wap/wap_icon.png 手机端图标 |---- /logo.png 公用图片 1.2 项目命名规范* 项目：用项目对应的英文单词命名 * 文件及文件夹: * 全部英文小写字母，可以使用中线，不可出现其他字符，如login,my-order * 调用 `/lib`里面的文件需包含版本号，压缩文件需包含`min`关键词，其他插件则可不包含，如：`/lib/jquery.1.9.1.js` 1.3 格式&amp;编码* 文本文件： `.xxx` UTF-8_\\(无BOM\\)_ 编码 * 图片文件： `.png` _(PNG-24)_ `.jpg` _(压缩率8-12)_ * 动态图片： `.gif` * 压缩文件： `.tar.gz` `.zip``.rar` 2. CSS 规范2.1 CSS 命名规范* 所有的命名用小写的英文单词 * 不使用简单的方位词直接命名，如“left”，“bottom” * 不缩写单词，除非一看就明白的单词 * 长名称或词组可以使用下划线作为连接符 * 避免选择器嵌套层级过多，少于3级 * 不要随意使用id，id应该按需使用，而不能滥用 * 使用CSS缩写属性 ，比如padding:0 10px 5px 5px等等，这样精简代码同时又能提高用户的阅读体验。 命名参考如下： CSS样式命名 说明 wrapper 页面外围控制整体布局宽度 container或content 容器,用于最外层 layout 布局 head, header 页头部分 foot, footer 页脚部分 nav 主导航 sub_nav 二级导航 menu 菜单 sub_menu 子菜单 sidebar_l, sidebar_r 左边栏或右边栏 main 页面主体 tag 标签 tips message 小技巧 vote 投票 friendlink 友情链接 title 标题 summary 摘要 login_bar 登录条 search_input 搜索输入框 hot 热门热点 search 搜索 search_output 搜索输出和搜索结果相似 search_bar 搜索条 search 搜索条 search 搜索条 search_results 搜索结果 search 搜索条 copyright 版权信息 branding 商标 logo 网站LOGO标志 site_info 网站信息 site_info_legal 法律声明 site_info_credits 信誉 join_us 加入我们 partner 合作伙伴 service 服务 regsiter 箭头 arr arrow 合作伙伴 site_map 网站地图 list 列表 home_page 首页 sub_page 二级页面子页面 tool, toolbar 工具条 drop 下拉 dorp_menu 下拉菜单 status 状态 scroll 滚动 tab 标签页 left right center 居左、中、右 news 新闻 download 下载 banner 广告条(顶部广告条) 2.2 CSS 书写规范* 向“无ID，无层级，无标签”准则靠拢，可有效提高重用性，减小文件大小，提升渲染效率 2.3 CSS 注释格式* 用来区分页面的注释，如/******************************************产品中心****************************************/ * 模块的注释,如/*首页导航栏*/ 2.4 CSS各属性的排列顺序：不做硬性要求* Positioning（定位，如position，top，z-index） * Box model（盒模型，如display，box-sizing，width，border） * Typographic（排版，如font，line-height，text-align） * Visual（视觉，如background，color,opacity） * Other（其他，如cursor） 由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因此排在首位。盒模型决定了组件的尺寸和位置，因此排在第二位。 其他属性只是影响组件的内部（inside）或者是不影响前两组属性，因此排在后面。 2.5 CSS格式化使用不换行方式书写，增加书写速度 .box{background: none repeat scroll 0 0 transparent;bottom: 11px;position: relative;width: 22px;z-index: 33;} 2.6 CSS字体单位* px像素（Pixel），相对长度单位，像素px是相对于显示器屏幕分辨率而言的。 * em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。 * rem也是相对长度单位，但相对的只是HTML根元素。 * vw代表视窗(Viewport)的宽度为1%，如果视窗宽度为1000px，那么50vw = 500px * vh代表窗口高度的百分，如果视窗高度为800px，那么50vh = 400px * 公司项目使用时注意事项：现有项目都是使用px作为单位，现推荐使用rem,vw,vh作为单位 3. JS 规范3.1 JS命名规范3.1.1 JS 变量命名* 命名方法：小驼峰式命名法 * 命名规范：前缀应当是名词。(函数的名字前缀为动词，以此区分变量和函数) * 命名建议：尽量在变量名字中体现所属类型，如:length、count等表示数字类型；而包含name、title表示为字符串类型。 * 示例 // 好的命名方式 var maxCount = 10; var tableTitle = &apos;LoginTable&apos;; // 不好的命名方式 var setCount = 10; var getTitle = &apos;LoginTable&apos;; 3.1.2 JS 函数命名* 命名方法：小驼峰式命名法 * 命名规范：前缀应当为动词 * 命名建议：可使用常见动词约定 动词 动词 返回值 can 判断是否可执行某个动作(权限) 函数返回一个布尔值。true：可执行；false：不可执行 has 判断是否含有某个值 函数返回一个布尔值。true：含有此值；false：不含有此值 is 判断是否为某个值 函数返回一个布尔值。true：为某个值；false：不为某个值 get 获取某个值 函数返回一个非布尔值 set 设置某个值 无返回值、返回是否设置成功或者返回链式对象 load 加载某些数据 无返回值或者返回是否加载完成的结果 3.1.3 JS 常量命名* 命名方法：名称全部大写 * 命名规范：使用大写字母和下划线来组合命名，下划线用以分割单词 * 示例 var MAX_COUNT = 10; var URL = &apos;http://www.baidu.com&apos;; 3.1.4 JS 文件命名* 使用短线（-）或句点（.）作为分隔符号，推荐使用句点，最好使用小写英文字符，不要使用其他符号和扩展字符，如 jQuery UI 1.9.0 的源文件可命名为“jquery-ui-1.9.0.js” * 使用 .js 扩展名，这个扩展名的兼容性最好。其实任何扩展名都可以，只要是 text 类型、编码正确即可 * 用句点分隔表示名称中的从属关系，范围大的在前，如jQuery 的表单插件 Form既可以命名为jquery.form.js 3.2 js 注释格式* 使用多行注释,以/*开头，*/结尾 3.3 js 注意事项* 书写格式 * JS 换行缩进：采用tab（打散为4个空格） * 结束行需添加分号`;` * 性能 * 尽量选用局部变量而不是全局变量 * 尽量使用链式写法 * 尽量减少DOM调用 * 将js脚本放到页面底部 * 使用jquery的data来存取数据，减少对dom的操作 * 使用on方法绑定事件，这是jquery的推荐使用 * 选择器的选择：尽量不用标签选择器，能用ID选择器的就不用class选择器 4. HTML 规范4.1 标签使用规范* 尽量减少标签层级 * 双标签必须闭合，单标签用斜线闭合 * HTML第一行统一使用HTML5标准&lt;!DOCTYPE html&gt; * 一律统一标签结尾斜杠的书写形式：`&lt;br /&gt;` `&lt;hr /&gt;` 注意之间空格 * 避免使用已过时标签，如：`&lt;font&gt;` `&lt;frame&gt;` `&lt;s&gt;` * `&lt;img&gt;`标签默认缺省格式：`&lt;img src=&quot;#&quot; alt=&quot;缺省时文字&quot; /&gt;` * `&lt;a&gt;`标签缺省格式：`&lt;a href=&quot;#&quot; title=&quot;链接名称&quot;&gt;xxx&lt;/&gt;` 注：`target=&quot;_blank&quot;` 根据需求决定 * style、link、script可省略type属性，因为 text/css 和 text/javascript 分别是他们的默认值 4.2 HTML注释&lt;!--内容--&gt; &lt;div class=&quot;content&quot;&gt; &lt;p&gt;content&lt;/p&gt; &lt;/div&gt; 4.3 注意事项* 手机端的自适应布局尽量采用弹性布局，而不是百分比 * `css`文件都 置于头部 * HTML换行缩进：采用 tab空格 * 其他效果`js`及`统计代码` 文件置于尾部 * 手机端的页面都按750px来做，显示效果按375px 5. Image 规范5.1 图片规范* 图片大小：切图时使用web格式保存，减小图片大小 * 图片尺寸：一律采用整数，如20X20，50X50 * 图片合并：小图片一律要合并，并保存对应的psd文件，以便后期修改","tags":[]},{"title":"下拉刷新","date":"2017-04-18T11:32:37.000Z","path":"2017/04/18/下拉刷新/","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Title&lt;/title&gt; &lt;script src=\"bower_components/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt; &lt;script src=\"plugins/dropload-gh-pages/dist/dropload.min.js\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" href=\"plugins/dropload-gh-pages/dist/dropload.css\"&gt; &lt;script src=\"plugins/jquery.tmpl.min.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"content\"&gt; &lt;ul id=\"movieList\"&gt;&lt;/ul&gt;&lt;/div&gt;&lt;!--列表模板--&gt;&lt;script id=\"movieTemplate\" type=\"text/x-jquery-tmpl\"&gt; &lt;li&gt; &lt;b&gt;$&#123;date&#125;&lt;/b&gt; &lt;b&gt;$&#123;pic&#125;&lt;/b&gt; &lt;b&gt;$&#123;title&#125;&lt;/b&gt; &lt;/li&gt;&lt;/script&gt;&lt;/body&gt;&lt;script&gt; $(function () &#123; // 页数 var page = 0; // 每页展示5个 var size = 5; // dropload $('.content').dropload(&#123; scrollArea: window, loadDownFn: function (me) &#123; page++; // 拼接HTML var result = ''; $.ajax(&#123; type: 'GET', url: 'http://ons.me/tools/dropload/json.php?page='+page+'&amp;size='+size,// url: rootPath + '/scmgnt/op/list/all?page=' + page + '&amp;rows=' + size, dataType: 'json', xhrFields: &#123;withCredentials: true&#125;, crossDomain: true, success: function (data) &#123; console.log(data); var arrLen = data.length; if (arrLen &gt; 0) &#123; &#125; else &#123; // 锁定 me.lock(); // 无数据 me.noData(); &#125; // 为了测试，延迟1秒加载 setTimeout(function () &#123; // 插入数据到页面，放到最后面 $(\"#movieTemplate\").tmpl(data).appendTo(\"#movieList\");// $('.lists').append(result); // 每次数据插入，必须重置 me.resetload(); &#125;, 1000); &#125;, error: function (xhr, type) &#123; alert('Ajax error!'); // 即使加载出错，也得重置 me.resetload(); &#125; &#125;); &#125; &#125;); &#125;);&lt;/script&gt;&lt;/html&gt;","tags":[]},{"title":"weChat","date":"2017-04-18T03:01:44.000Z","path":"2017/04/18/weChat/","text":"统一使用微信的插件1234567891011121314// 加载转圈var loading = weui.loading('加载中...');// 加载消失loading.hide// 自身的提示框(上面有对号图标) weui.toast('操作成功', 2000)// 自定义的toast提示框（只有文字提示） weui.toast('系统异常，请稍后再试！', &#123; className: 'toast', duration: 2000, &#125;); 下拉刷新 (dropload插件)12345678910111213141516171819202122232425function httprequest(code,name,me)&#123; // 拼接HTML //调用列表接口 HttpUtils.get(API.listAll,&#123;page:page,rows:size,loginCode:code, opName:name&#125;,function(data)&#123; var arrLen = data.rows.length; page++; if(arrLen &lt; size)&#123; // 锁定 me.lock(); // 无数据 me.noData(); &#125; // 为了测试，延迟1秒加载 $(\"#movieTemplate\").tmpl(data.rows).appendTo(\"#content\"); me.resetload(); &#125;,function()&#123; //alert('Ajax error!'); // 即使加载出错，也得重置 //me.resetload(); weui.toast('系统异常，请稍后再试！', &#123; className: 'toast', duration: 2000, &#125;); &#125;)&#125; tab页的横向滚动 iscroll插件详情123456789101112131415161718// preventDefault: true,preventDefault: false,//（把这句加上去哦）preventDefaultException: &#123; tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT|A)$/ &#125;, //（这个后面加|A,因为iscroll阻止了A的默认事件）// tab 滚动var myscroll;function loaded() &#123; setTimeout(function () &#123; myscroll = new IScroll('#tabs', &#123; scrollX: true, scrollY: false, click: true &#125;) &#125;, 100)&#125;window.addEventListener('load', loaded, false)","tags":[]},{"title":"《最常用的正则表达式》","date":"2017-04-14T05:46:21.000Z","path":"2017/04/14/正则表达式/","text":"正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。 一、校验数字的表达式数字：^[0-9]*$ n位的数字：^\\d{n}$ 至少n位的数字：^\\d{n,}$ m-n位的数字：^\\d{m,n}$ 零和非零开头的数字：^(0|[1-9][0-9]*)$ 非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$ 带1-2位小数的正数或负数：^(-)?\\d+(.\\d{1,2})?$ 正数、负数、和小数：^(-|+)?\\d+(.\\d+)?$ 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$ 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$ 非零的正整数：^[1-9]\\d*$ 或 ^([1-9][0-9]){1,3}$ 或 ^+?[1-9][0-9]$ 非零的负整数：^-[1-9][]0-9”$ 或 ^-[1-9]\\d$ 非负整数：^\\d+$ 或 ^[1-9]\\d*|0$ 非正整数：^-[1-9]\\d*|0$ 或 ^((-\\d+)|(0+))$ 非负浮点数：^\\d+(.\\d+)?$ 或 ^[1-9]\\d.\\d|0.\\d[1-9]\\d|0?.0+|0$ 非正浮点数：^((-\\d+(.\\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\\d.\\d|0.\\d[1-9]\\d))|0?.0+|0$ 正浮点数：^[1-9]\\d.\\d|0.\\d[1-9]\\d$ 或 ^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$ 负浮点数：^-([1-9]\\d.\\d|0.\\d[1-9]\\d)$ 或 ^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$ 浮点数：^(-?\\d+)(.\\d+)?$ 或 ^-?([1-9]\\d.\\d|0.\\d[1-9]\\d|0?.0+|0)$ 二、校验字符的表达式汉字：^[\\u4e00-\\u9fa5]{0,}$ 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$ 长度为3-20的所有字符：^.{3,20}$ 由26个英文字母组成的字符串：^[A-Za-z]+$ 由26个大写英文字母组成的字符串：^[A-Z]+$ 由26个小写英文字母组成的字符串：^[a-z]+$ 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$ 由数字、26个英文字母或者下划线组成的字符串：^\\w+$ 或 ^\\w{3,20}$ 中文、英文、数字包括下划线：^[\\u4E00-\\u9FA5A-Za-z0-9_]+$ 中文、英文、数字但不包括下划线等符号：^[\\u4E00-\\u9FA5A-Za-z0-9]+$ 或 ^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$ 可以输入含有^%&amp;’,;=?$”等字符：[^%&amp;’,;=?$\\x22]+ 12 禁止输入含有的字符：[^\\x22]+ 三、特殊需求表达式Email地址：^\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)*$ 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.? InternetURL：[a-zA-z]+://[^\\s] 或 ^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&amp;=])?$ 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$ 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$ 国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d{7} 身份证号(15位、18位数字)：^\\d{15}|\\d{18}$ 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$ 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\\w{5,17}$ 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{8,10}$ 日期格式：^\\d{4}-\\d{1,2}-\\d{1,2} 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$ 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$ 钱的输入格式：1.有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：^[1-9][0-9]*$ 2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$ 3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$ 4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$ 5.必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：^[0-9]+(.[0-9]{2})?$ 6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$ 7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$ 23 8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$ 备注：这就是最终结果了,别忘了”+”可以用”*”替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+.[x|X][m|M][l|L]$ 中文字符的正则表达式：[\\u4e00-\\u9fa5] 双字节字符：[^\\x00-\\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1)) 空白行的正则表达式：\\n\\s*\\r (可以用来删除空白行) HTML标记的正则表达式：&lt;(\\S?)[^&gt;]&gt;.?&lt;/\\1&gt;|&lt;.? /&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力) 首尾空白字符的正则表达式：^\\s|\\s$或(^\\s)|(\\s$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式) 腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始) 中国邮政编码：[1-9]\\d{5}(?!\\d) (中国邮政编码为6位数字) IP地址：\\d+.\\d+.\\d+.\\d+ (提取IP地址时有用) IP地址：((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))","tags":[{"name":"正则","slug":"正则","permalink":"http://yoursite.com/tags/正则/"}]},{"title":"markdown用法","date":"2017-04-11T13:29:27.000Z","path":"2017/04/11/test/","text":"插入链接百度 插入图片 To do list-[x] 已完成的项目 -[x] 已完成的项目 -[ ] 待办事项 无序列表 列表一 列表 列表 列表二有序列表 列表一 列表一 列表二 列表二引用 记录，成为更好的自己 这是斜体这是粗体 分割线这是一段内容 这是一段内容 表格 姓名 年龄 性别 tommy 22 男 jack 22 男 流程图123graph TD A[Christmas] --&gt; B(Go shopping) B --&gt; C&#123;let me think&#125;","tags":[{"name":"tips","slug":"tips","permalink":"http://yoursite.com/tags/tips/"}]},{"title":"Hello World","date":"2017-04-10T09:39:54.000Z","path":"2017/04/10/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing","tags":[]},{"title":"我的相册","date":"2017-04-10T09:34:46.000Z","path":"2017/04/10/photo/","text":"蜡笔小新 东坝秦门饭店留影（刘飘）-2017.03.04","tags":[{"name":"photo","slug":"photo","permalink":"http://yoursite.com/tags/photo/"}]}]